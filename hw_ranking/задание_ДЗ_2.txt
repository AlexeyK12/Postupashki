Пояснялка:
в ДЗ надо реализовать несколько метрик


Здесь будут как простые метрики, которые можно применять не только в контексте LTR, так и специфические метрики для ранжирования
Все функции, кроме вспомогательной compute_gain, принимают в качестве первых двух аргументов тензоры y_true и y_pred
Предполагается, что это вещественные тензоры торча размерности n, представляющие целевые значения релевантности и предсказанные значения соответственно
Для создания примеров входных данных вы можете использовать torch.rand(n), если не указаны конкретные требования к исходным тензорам
В рамках задания предполагается, что y_pred содержит уникальные значения без повторений
 Для каждой метрики в шаблоне скрипта, приложенном к домашнему заданию, указан тип возвращаемого значения, на который следует обратить внимание
Также убедитесь, что значение метрики находится в допустимом диапазоне (например, если метрика нормирована от 0 до 1)


P.S.: если вы не знакомы или плохо знакомы с PyTorch, то можете работать с тензорами так же, как с массивами NumPy


- num_swppd_pairs — функция для подсчета количества неправильно упорядоченных пар (правильное упорядочение — от наибольшего к наименьшему значению в y_true). Учтите, что одну и ту же пару не следует считать дважды.


- compute_gain — вспомогательная функция для вычисления DCG и NDCG, которая рассчитывает показатель Gain. Она принимает дополнительный аргумент — схему начисления Gain (gain_scheme). В лекции был приведен пример постоянного начисления, равного оценке релевантности. Необходимо реализовать как этот метод (при gain_scheme="const"), так и экспоненциальный (при gain_scheme="exp2"), который рассчитывается по формуле (2^r−1), где r — реальная релевантность документа для данного запроса. Логика здесь заключается в том, что чем выше релевантность, тем ценнее документ, и темп роста "ценности" нелинейный — гораздо важнее отделить документ с релевантностью 5 от документа с релевантностью 3, чем 3 от 1 (поскольку оба они слабо релевантны). Функция принимает на вход одно число (не тензор).


- dcg и ndcg — функции для расчета DCG и NDCG соответственно. Они принимают дополнительный параметр gain_scheme, аналогичный тому, что используется в функции compute_gain (эту функцию нужно использовать при расчетах этих метрик). Для NDCG допускается повторное использование функции для расчета DCG.


- precis_at_k — функция для вычисления точности в топ-k позициях для бинарной разметки (в y_true содержатся только нули и единицы). Если среди меток нет ни одного релевантного документа (единицы), необходимо вернуть -1. Функция принимает параметр k, указывающий количество объектов, по которым нужно произвести расчет метрики. Учтите, что k может превышать количество элементов во входных тензорах. При реализации precis_at_k необходимо добиться того, чтобы максимум функции равнялся единице при любом y_true, кроме случая, когда в нем нет единиц (рассмотрите ситуацию с ранжированием поисковой выдачи, где в разметке присутствует n<k релевантных документов). В связи с этой особенностью не рекомендуется переиспользовать реализацию precis_at_k в других метриках данного задания. Также можно считать, что в ys_true содержатся все возможные единицы в датасете (например, если система отбора кандидатов для ранжирования их пропустила, можно добавить такой объект с предсказанным значением −∞).


- recip_rank — функция для расчета MRR (без усреднения, то есть для одного запроса и множества документов). В y_true могут содержаться только нули и максимум одна единица.


-p_found — это функция, предназначенная для вычисления P-found по методологии Яндекса. Она принимает дополнительный аргумент p_break, который представляет собой вероятность прекращения просмотра списка документов в выдаче. Основная вероятность того, что пользователь просмотрит первый документ в выдаче, равна единице. Значения в y_true нормализованы в диапазоне от 0 до 1 и отражают вероятность удовлетворения запроса пользователя.


-avg_precis — функция, которая вычисляет среднюю точность (AP) для бинарной разметки, где в y_true содержатся только нули и единицы. Если среди меток отсутствуют релевантные документы (единицы), функция должна вернуть -1.